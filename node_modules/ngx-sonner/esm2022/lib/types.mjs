export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../../libs/ngx-sonner/src/lib/types.ts"],"names":[],"mappings":"","sourcesContent":["import { TemplateRef, Type } from '@angular/core';\n\nexport type Expand<T> = T extends object\n  ? T extends infer O\n    ? { [K in keyof O]: O[K] }\n    : never\n  : T;\n\nexport type ToastTypes =\n  | 'action'\n  | 'success'\n  | 'info'\n  | 'warning'\n  | 'error'\n  | 'loading'\n  | 'default';\n\nexport type PromiseT<Data = unknown> = Promise<Data> | (() => Promise<Data>);\n\nexport type PromiseData<ToastData = unknown> = ExternalToast & {\n  loading?: string | Type<unknown>;\n  success?:\n    | string\n    | Type<unknown>\n    | ((data: ToastData) => Type<unknown> | string);\n  error?: string | Type<unknown> | ((error: unknown) => Type<unknown> | string);\n  finally?: () => void | Promise<void>;\n};\n\nexport type ToastT = {\n  /**\n   * Custom id for the toast.\n   *\n   * @default autogenerated\n   */\n  id: number | string;\n  title?: string | Type<unknown>;\n  type?: ToastTypes;\n  /**\n   * Icon displayed in front of toast's text, aligned vertically.\n   */\n  icon?: Type<unknown>;\n  component?: Type<unknown>;\n  componentProps?: Record<string, unknown>;\n  /**\n   * Dark toast in light mode and vice versa.\n   *\n   * @default false\n   */\n  invert?: boolean;\n  /**\n   * Adds a close button.\n   *\n   * @default false\n   */\n  closeButton?: boolean;\n  /**\n   * If `false`, it'll prevent the user from dismissing the toast by swiping.\n   *\n   * @default true\n   */\n  dismissible?: boolean;\n  /**\n   * Toast's description, renders underneath the title.\n   */\n  description?: string | Type<unknown>;\n  /**\n   * Time in milliseconds that should elapse before automatically closing the toast.\n   *\n   * @default 4000\n   */\n  duration?: number;\n  delete?: boolean;\n  /**\n   * Control the sensitivity of the toast for screen readers.\n   *\n   * @default false\n   */\n  important?: boolean;\n  /**\n   * Renders a primary button, clicking it will close the toast.\n   */\n  action?: {\n    label: string;\n    onClick: (event: MouseEvent) => void;\n  };\n  /**\n   * Renders a secondary button, clicking it will close the toast.\n   */\n  cancel?: {\n    label: string;\n    onClick?: () => void;\n  };\n  /**\n   * The function gets called when either the close button is clicked, or the toast is swiped.\n   *\n   * @param toast\n   */\n  onDismiss?: (toast: ToastT) => void;\n  /**\n   * Function that gets called when the toast disappears automatically after it's timeout (duration` prop).\n   *\n   * @param toast\n   */\n  onAutoClose?: (toast: ToastT) => void;\n  promise?: PromiseT;\n  cancelButtonStyle?: string;\n  actionButtonStyle?: string;\n  style?: Record<string, unknown>;\n  /**\n   * Removes the default styling, which allows for easier customization.\n   */\n  unstyled?: boolean;\n  class?: string;\n  classes?: ToastClassnames;\n  descriptionClass?: string;\n  /**\n   * Position of the toast.\n   *\n   * @default 'bottom-right'\n   */\n  position?: Position;\n  /**\n   * @internal This is used to determine if the toast has been updated to determine when to reset timer.\n   */\n  updated?: boolean;\n};\n\nexport type Position =\n  | 'top-left'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'top-center'\n  | 'bottom-center';\n\nexport type HeightT = {\n  height: number;\n  toastId: number | string;\n};\n\nexport type Theme = 'light' | 'dark' | 'system';\n\nexport type ToastToDismiss = {\n  id: number | string;\n  dismiss: boolean;\n};\n\nexport type ExternalToast = Omit<ToastT, 'id' | 'type' | 'title'> & {\n  id?: number | string;\n};\n\nexport type ToasterProps = {\n  /**\n   * Dark toasts in light mode and vice versa.\n   *\n   * @default false\n   */\n  invert: boolean;\n\n  /**\n   * Toast's theme, either `light`, `dark`, or `system`\n   *\n   * @default 'light'\n   */\n  theme: 'light' | 'dark' | 'system';\n\n  /**\n   * Place where the toasts will be rendered\n   *\n   * @default 'bottom-right'\n   */\n  position: Position;\n\n  /**\n   * Keyboard shortcut that will move focus to the toaster area.\n   *\n   * @default '⌥/alt + T'\n   */\n  hotkey: string[];\n\n  /**\n   * Makes error and success state more colorful\n   *\n   * @default false\n   */\n  richColors: boolean;\n\n  /**\n   * Toasts will be expanded by default\n   *\n   * @default false\n   */\n  expand: boolean;\n\n  /**\n   * The duration of the toast in milliseconds.\n   *\n   * @default 4000\n   */\n  duration: number;\n\n  /**\n   * Amount of visible toasts\n   *\n   * @default 3\n   */\n  visibleToasts: number;\n\n  /**\n   * Adds a close button to all toasts, shows on hover\n   *\n   * @default false\n   */\n  closeButton: boolean;\n\n  /**\n   * These will act as default options for all toasts.\n   *\n   * @default {}\n   */\n  toastOptions: ToastOptions;\n\n  /**\n   * Offset from the edges of the screen.\n   *\n   * @default '32px'\n   */\n  offset: string | number | null;\n\n  /**\n   * Directionality of toast's text\n   *\n   * @default 'ltr'\n   */\n  dir: 'ltr' | 'rtl' | 'auto';\n\n  /**\n   * Gap between toasts when expanded, in pixels.\n   *\n   * @default '14px'\n   */\n  gap: number;\n\n  /**\n   * Changes the default loading icon\n   *\n   * @default -\n   */\n  loadingIcon: TemplateRef<unknown>;\n};\n\nexport type ToastOptions = {\n  /**\n   * The classes applied to the toast element.\n   */\n  class?: string;\n\n  /**\n   * The classes applied to the toast description element.\n   */\n  descriptionClass?: string;\n\n  /**\n   * The CSS styles applied to the toast element.\n   */\n  style?: Record<string, unknown>;\n\n  /**\n   * The CSS styles applied to the cancel button element.\n   */\n  cancelButtonStyle?: string;\n\n  /**\n   * The CSS styles applied to the action button element.\n   */\n  actionButtonStyle?: string;\n\n  /**\n   * The duration of the toast in milliseconds.\n   */\n  duration?: number;\n\n  /**\n   * Whether the toast should be unstyled or not.\n   */\n  unstyled?: boolean;\n\n  /**\n   * Classes to apply to the various elements of the toast.\n   */\n  classes?: Expand<ToastClassnames>;\n};\n\n/**\n * The classes applied to the various elements of the toast.\n */\nexport type ToastClassnames = {\n  toast?: string;\n  title?: string;\n  description?: string;\n  loader?: string;\n  closeButton?: string;\n  cancelButton?: string;\n  actionButton?: string;\n} & ToastTypeClasses;\n\ntype ToastTypeClasses = Partial<Record<ToastTypes, string>>;\n\nexport type ToastProps = {\n  toast: ToastT;\n  index: number;\n  expanded: boolean;\n  invert: boolean;\n  position: Position;\n  visibleToasts: number;\n  expandByDefault: boolean;\n  closeButton: boolean;\n  interacting: boolean;\n  cancelButtonStyle: string;\n  actionButtonStyle: string;\n  duration: number | null;\n  descriptionClass: string;\n  classes: ToastClassnames;\n  unstyled: boolean;\n};\n"]}